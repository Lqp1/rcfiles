---
- name: Install nix
  when: not minimal|bool
  block:
    - name: Check if Nix pkg manager is already installed
      ansible.builtin.stat:
        path: /nix
      register: nix_info
    - name: Download installer
      ansible.builtin.get_url:
        url: https://nixos.org/nix/install
        dest: /tmp/nix-install
        mode: "0644"
      when: not nix_info.stat.exists
    - name: Install Nix
      ansible.builtin.command: /bin/bash /tmp/nix-install
      when: not nix_info.stat.exists
    - name: Create some directories
      ansible.builtin.file:
        path: ~/.profile.d/
        state: directory
        mode: "0755"
    - name: Setup nix and hm variables in profiles
      ansible.builtin.template:
        src: env
        dest: ~/.profile.d/20nix
        mode: "0644"
    - name: Add nixgl channel if not running inside NixOS
      ansible.builtin.command: nix-channel --add https://github.com/guibou/nixGL/archive/main.tar.gz nixgl
      when: ansible_os_family != "NixOS" and ansible_system == "Linux"
    - name: Update channels
      ansible.builtin.command: nix-channel --update
    - name: Create local app directory
      ansible.builtin.file:
        path: ~/.local/share/applications/
        state: directory
        mode: "0755"
    - name: Setup Chrome wrapper when not running in NixOS
      ansible.builtin.template:
        src: google-chrome-gl.desktop
        dest: ~/.local/share/applications/google-chrome-gl.desktop
        mode: "0644"
      when: ansible_os_family != "NixOS" and ansible_system == "Linux"
    - name: Install nixglIntel on non other Linux distrib than NixOS
      ansible.builtin.command: nix-env -iA nixgl.nixGLIntel
      when: ansible_os_family != "NixOS" and ansible_system == "Linux"
      notify: Nix-gc
    - name: Upgrade nix on non NixOS system
      ansible.builtin.command: nix-env --install --attr nixpkgs.nix nixpkgs.cacert
      when: ansible_os_family != "NixOS" and ansible_system == "Linux"
      notify: Nix-gc
    - name: Create /bin dir to store test script
      ansible.builtin.file:
        path: ~/bin
        state: directory
        mode: "0755"
    - name: Copy nix release script in binary directory
      ansible.builtin.copy:
        src: haz-nix-release
        dest: "~/bin/haz-nix-release"
        mode: "0755"
    - name: Test if a new Nix channel release is found
      ansible.builtin.shell: ~/bin/haz-nix-release
      register: nix_releases
    - name: Warn if a newer Nix channel is found
      fail:
        msg: "Warning: New release of Nix channel detected: {{nix_releases.stdout}}"
      when: nix_releases.stdout != "" and ansible_os_family != "NixOS"
      ignore_errors: True

