---
- name: "Check dependencies"
  command: "which {{ item }}"
  with_items:
     - bash
     - git
     - vim
     - ip
     - less
- name: "Check optional dependencies"
  command: "which {{ item }}"
  with_items:
     #debug
     - htop
     - iotop
     - iftop
     - powertop
     - dfc
     # editors and shell
     - emacs
     - zsh
     - autojump
     - screen
     - tree
     - curl
     # X11
     - i3
     - feh
     - rofi
     - xdotool
     # dev
     - python
     - ruby
     - go
     - sbcl
     - adb
  when: not minimal|bool
  ignore_errors: yes
- name: "Clone FZF"
  git:
      repo: "https://github.com/junegunn/fzf.git"
      dest: "{{home}}/.fzf"
  when: not minimal|bool
- name: "Install FZF"
  shell: "{{home}}/.fzf/install"
  when: not minimal|bool
- name: "Clone Splatmoji"
  git:
     repo: "https://github.com/cspeterson/splatmoji"
     dest: "{{home}}/.splatmoji"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Clone Spacemacs from github"
  git:
     repo: "https://github.com/syl20bnr/spacemacs"
     dest: "{{home}}/.emacs.d"
     version: "develop"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Clone Oh My ZSH from github"
  git:
     repo: "https://github.com/robbyrussell/oh-my-zsh"
     dest: "{{home}}/.oh-my-zsh"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Clone Autosuggestions from github"
  git:
     repo: "https://github.com/zsh-users/zsh-autosuggestions"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Clone Syntax from github"
  git:
     repo: "https://github.com/zsh-users/zsh-syntax-highlighting"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Clone FZF interactive CD plugin from github"
  git:
     repo: "https://github.com/changyuheng/zsh-interactive-cd"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-interactive-cd"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Add autotiling tool"
  git:
      repo: "https://github.com/nwg-piotr/autotiling"
      dest: "{{home}}/.autotiling"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Install i3ipc for i3 autotiling"
  pip:
      name: "i3ipc"
      state: latest
      extra_args: "--user"
  become: yes
  become_user : "{{user}}"
  when: not minimal|bool
- name: "Add FZF-man plugin"
  copy:
     src: "res/fzf-man"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/"
     owner: "{{user}}"
  when: not minimal|bool
- name: "Add FZF-j plugin"
  copy:
     src: "res/fzf-j"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/"
     owner: "{{user}}"
  when: not minimal|bool
- name: "Create some directories"
  file:
     path: "{{home}}/{{item}}"
     state: "directory"
     owner: "{{user}}"
  with_items:
     - ".cache"
     - ".cache/zsh"
     - ".vim"
     - ".vim/colors"
     - ".vim/autoload"
     - ".config/nvim/"
     - ".config/i3/"
     - ".githooks"
- name: "Copy additionnal configuration files"
  copy:
   src:  "{{item.src}}"
   dest : "{{home}}/{{item.dst}}"
   owner: "{{user}}"
  with_items:
     - { src : "screenrc", dst : ".screenrc"}
     - { src : "vimrc", dst : ".vimrc"}
     - { src : "res/vim-colors-solarized/colors/solarized.vim", dst : ".vim/colors/solarized.vim"}
     - { src : "res/vim-plug/plug.vim", dst : ".vim/autoload/plug.vim"}
     - { src : "nvimrc", dst : ".config/nvim/init.vim"}
     - { src : "i3", dst : ".config/i3/config"}
     - { src : "bashrc", dst : ".bashrc"}
     - { src : "profile", dst : ".profile"}
     - { src : "zshenv", dst : ".zshenv"}
     - { src : "spacemacs", dst : ".spacemacs"}
     - { src : "xresources", dst : ".Xresources"}
  notify: activate xres
- name: "Copy minimal ZSH"
  copy:
      src: "zshrc"
      dest: "{{home}}/.zshrc"
      owner: "{{user}}"
  when: minimal|bool
- name: "Link ZSH RC"
  copy:
     src: "{{home}}/.oh-my-zsh/templates/zshrc.zsh-template"
     dest: "{{home}}/.zshrc"
     owner: "{{user}}"
     remote_src: true
  when: not minimal|bool
- name: "Configure Oh My ZSH home dir"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'export ZSH=.*'
     replace: 'export ZSH="{{home}}/.oh-my-zsh"'
  when: not minimal|bool
- name: "Add a fork of cypher prompt, with time"
  copy:
    dest: "{{home}}/.oh-my-zsh/themes/timed-cypher.zsh-theme"
    content: "PROMPT=\"[%*] %m %{${fg_bold[red]}%}:: %{${fg[green]}%}%3~%(0?. . %{${fg[red]}%}%? )%{${fg[blue]}%}Â»%{${reset_color}%} \""
  when: not minimal|bool
- name: "Configure Oh My ZSH prompt"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'ZSH_THEME=.*'
     replace: 'ZSH_THEME="timed-cypher"'
  when: not minimal|bool
- name: "Configure Oh My ZSH plugins"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'plugins=.*'
     replace: 'plugins=(zsh-syntax-highlighting zsh-autosuggestions colored-man-pages autojump fzf fzf-man fzf-j)'
  when: not minimal|bool
- name: "Add waiting dots"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: '# COMPLETION_WAITING_DOTS="true"'
     replace: 'COMPLETION_WAITING_DOTS="true"'
  when: not minimal|bool
- name: "Disable auto updates"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: '# DISABLE_AUTO_UPDATE="true"'
     replace: 'DISABLE_AUTO_UPDATE="true"'
  when: not minimal|bool
- name: "Add custom aliases and xports"
  lineinfile:
     dest: "{{home}}/.zshrc"
     line: "{{item}}"
     state: "present"
  with_items:
     - "export EDITOR='vim'"
     - "export PAGER='less'"
     - "export LESS='{{ lessopts }}'"
     - "export ALTERNATE_EDITOR=''"
     - "alias ls='ls --color=auto -F'"
     - "alias ip='ip --color=auto'"
     - "alias gits='git status'"
     - "alias gitd='git diff'"
     - "alias gitg='git pull'"
     - "alias gitp='git push'"
     - "alias gitw='git whatchanged'"
     - "alias gitl='git tree'"
     - "source {{home}}/.bash_aliases 2>/dev/null"
- name: "Add git alias and sane behaviors"
  shell: "{{ item }}"
  with_items:
      - 'git config --global alias.tree "log --graph --pretty=\"format:%ad %C(yellow)%h%Creset - %C(red)%an%Creset : %C(bold blue)%d%Creset %s\" --date=short"'
      - 'git config --global alias.clean "clean -dxe {{cleanignore}}"'
      - 'git config --global pull.rebase true'
      - 'git config --global remote.origin.tagOpt --tags'
      - 'git config --global rebase.autoStash true'
      - 'git config --global commit.verbose true'
      - 'git config --global status.short true'
      - 'git config --global status.branch true'
      - 'git config --global core.autocrlf input'
      - 'git config --global core.safecrlf warn'
      - 'git config --global core.editor vim'
      - 'git config --global core.excludesfile {{ home }}/.gitignore'
      - 'git config --global core.hooksPath {{ home }}/.githooks'
      - 'git config --global core.page "less {{ lessopts }}"'
      - 'git config --global help.autocorrect 20'
      - 'git config --global merge.tool vimdiff'
      - 'git config --global diff.tool vimdiff'
      - 'git config --global difftool.prompt false'
      - 'git config --global user.email "{{git_mail}}"'
      - 'git config --global user.name "{{git_user}}"'
- name: "Configure GTK-2.0 apps"
  lineinfile:
      create: yes
      line: "gtk-key-theme-name = \"Emacs\""
      path: "{{home}}/.gtkrc-2.0"
- name: "Configure minimal GTK-3.0 config file"
  lineinfile:
      create: yes
      line: "[Settings]"
      path: "{{home}}/.config/gtk-3.0/settings.ini"
- name: "Configure GTK-3.0 apps"
  lineinfile:
      line: "gtk-key-theme-name = \"Emacs\""
      insertafter: "[Settings]"
      path: "{{home}}/.config/gtk-3.0/settings.ini"
- name: "Add curlrc config"
  lineinfile:
     create: yes
     dest: "{{home}}/.curlrc"
     line: "{{item}}"
     state: "present"
  with_items:
     - "--location"
- name: "Add global gitignore"
  lineinfile:
     create: yes
     dest: "{{home}}/.gitignore"
     line: "{{item}}"
     state: "present"
  with_items: "{{gitignore}}"
