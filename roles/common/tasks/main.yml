---
- name: "Check dependencies"
  command: "which {{ item }}"
  with_items:
     - git
     - ip
     - less
     - curl
- name: "Clone FZF"
  git:
      repo: "https://github.com/junegunn/fzf.git"
      dest: "{{home}}/.fzf"
  when: not minimal|bool
- name: "Install FZF"
  shell: "{{home}}/.fzf/install"
  when: not minimal|bool
- name: "Clone Spacemacs from github"
  git:
     repo: "https://github.com/syl20bnr/spacemacs"
     dest: "{{home}}/.emacs.d"
     version: "develop"
  when: not minimal|bool
- name: "Clone Oh My ZSH from github"
  git:
     repo: "https://github.com/robbyrussell/oh-my-zsh"
     dest: "{{home}}/.oh-my-zsh"
  when: not minimal|bool
- name: "Clone Autosuggestions from github"
  git:
     repo: "https://github.com/zsh-users/zsh-autosuggestions"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  when: not minimal|bool
- name: "Clone Syntax from github"
  git:
     repo: "https://github.com/zsh-users/zsh-syntax-highlighting"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
  when: not minimal|bool
- name: "Clone FZF interactive CD plugin from github"
  git:
     repo: "https://github.com/changyuheng/zsh-interactive-cd"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/zsh-interactive-cd"
  when: not minimal|bool
- name: "Clone zsh-autoenv plugin from github"
  git:
     repo: "https://github.com/Tarrasch/zsh-autoenv"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/autoenv"
  when: not minimal|bool
- name: "Add FZF-man plugin"
  copy:
     src: "res/fzf-man"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/"
  when: not minimal|bool
- name: "Add FZF-j plugin"
  copy:
     src: "res/fzf-j"
     dest: "{{home}}/.oh-my-zsh/custom/plugins/"
  when: not minimal|bool
- name: "Create some directories"
  file:
     path: "{{home}}/{{item}}"
     state: "directory"
  with_items:
     - ".cache"
     - ".aliases"
     - ".cache/zsh"
     - ".vim"
     - ".vim/colors"
     - ".vim/autoload"
     - ".config/nvim/"
     - ".githooks"
     - ".profile.d"
     - "bin"
- name: "Copy additionnal configuration files"
  copy:
   src:  "{{item.src}}"
   dest : "{{home}}/{{item.dst}}"
  with_items:
     - { src : "screenrc", dst : ".screenrc"}
     - { src : "vimrc", dst : ".vimrc"}
     - { src : "res/vim-colors-solarized/colors/solarized.vim", dst : ".vim/colors/solarized.vim"}
     - { src : "res/vim-plug/plug.vim", dst : ".vim/autoload/plug.vim"}
     - { src : "nvimrc", dst : ".config/nvim/init.vim"}
     - { src : "bashrc", dst : ".bashrc"}
     - { src : "profile", dst : ".profile"}
     - { src : "zshenv", dst : ".zshenv"}
     - { src : "spacemacs", dst : ".spacemacs"}
     - { src : "bash_aliases", dst : ".bash_aliases"}
     - { src : "vgrep", dst : ".aliases/10vgrep"}
     - { src : "bat", dst : ".aliases/11bat"}
- name: "Copy user oh my ZSH config"
  copy:
      src: "omzsh"
      dest: "{{home}}/.oh-my-zsh/custom/omzsh.zsh"
  when: not minimal|bool
- name: "Copy minimal ZSH"
  copy:
      src: "zshrc"
      dest: "{{home}}/.zshrc"
  when: minimal|bool
- name: "Link ZSH RC"
  copy:
     src: "{{home}}/.oh-my-zsh/templates/zshrc.zsh-template"
     dest: "{{home}}/.zshrc"
     remote_src: true
  when: not minimal|bool
- name: "Configure Oh My ZSH home dir"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'export ZSH=.*'
     replace: 'export ZSH="{{home}}/.oh-my-zsh"'
  when: not minimal|bool
- name: "Add a fork of cypher prompt, with time"
  copy:
    dest: "{{home}}/.oh-my-zsh/themes/timed-cypher.zsh-theme"
    content: "PROMPT=\"[%*] %m %{${fg_bold[red]}%}:: %{${fg[green]}%}%3~%(0?. . %{${fg[red]}%}%? )%{${fg[blue]}%}Â»%{${reset_color}%} \""
  when: not minimal|bool
- name: "Configure Oh My ZSH prompt"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'ZSH_THEME=.*'
     replace: 'ZSH_THEME="timed-cypher"'
  when: not minimal|bool
- name: "Configure Oh My ZSH plugins"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: 'plugins=.*'
     replace: 'plugins=(zsh-syntax-highlighting zsh-autosuggestions colored-man-pages autojump fzf fzf-man fzf-j zsh-interactive-cd autoenv)'
  when: not minimal|bool
- name: "Add waiting dots"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: '# COMPLETION_WAITING_DOTS="true"'
     replace: 'COMPLETION_WAITING_DOTS="true"'
  when: not minimal|bool
- name: "Disable auto updates"
  replace:
     dest: "{{home}}/.zshrc"
     regexp: '# DISABLE_AUTO_UPDATE="true"'
     replace: 'DISABLE_AUTO_UPDATE="true"'
  when: not minimal|bool
- name: "Fix fg color for zsh autosuggestions"
  lineinfile:
     dest: "{{home}}/.zshrc"
     regexp: 'ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=.*'
     line: "ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=23'"
     state: present
  when: not minimal|bool
- name: "Add custom aliases and xports"
  copy:
     dest: "{{home}}/.aliases/00common"
     content: "{{aliases | join('\n')}}\n"
     mode: 0600
- name: "Add git alias and sane behaviors"
  shell: "{{ item }}"
  with_items:
      - 'git config --global alias.tree "log --graph --pretty=\"format:%ad %C(yellow)%h%Creset - %C(red)%an%Creset : %C(bold blue)%d%Creset %s\" --date=short"'
      - 'git config --global alias.clean "clean -dxe {{cleanignore}}"'
      - 'git config --global pull.rebase true'
      - 'git config --global remote.origin.tagOpt --tags'
      - 'git config --global rebase.autoStash true'
      - 'git config --global commit.verbose true'
      - 'git config --global status.short true'
      - 'git config --global status.branch true'
      - 'git config --global core.autocrlf input'
      - 'git config --global core.safecrlf warn'
      - 'git config --global core.editor vim'
      - 'git config --global core.excludesfile {{ home }}/.gitignore'
      - 'git config --global core.hooksPath {{ home }}/.githooks'
      - 'git config --global core.page "less {{ lessopts }}"'
      - 'git config --global help.autocorrect 20'
      - 'git config --global merge.tool vimdiff'
      - 'git config --global diff.tool vimdiff'
      - 'git config --global difftool.prompt false'
      - 'git config --global user.email "{{git_mail}}"'
      - 'git config --global user.name "{{git_user}}"'
      - 'git config --global core.attributesfile {{ home }}/.gitattributes'
      - 'git config --global alias.root "rev-parse --show-toplevel"'
- name: "Add curlrc config"
  lineinfile:
     create: yes
     dest: "{{home}}/.curlrc"
     line: "{{item}}"
     state: "present"
  with_items:
     - "--location"
- name: "Add global gitignore"
  lineinfile:
     create: yes
     dest: "{{home}}/.gitignore"
     line: "{{item}}"
     state: "present"
  with_items: "{{gitignore}}"
- name: "Add global gitattributes"
  lineinfile:
     create: yes
     dest: "{{home}}/.gitattributes"
     line: "{{item}}"
     state: "present"
  with_items: "{{gitattributes}}"
- name: "Pull exa zip"
  get_url:
      url: "https://github.com/ogham/exa/releases/download/v{{exa_version}}/exa-linux-x86_64-{{exa_version}}.zip"
      dest: "/tmp/exa-{{exa_version}}.zip"
  when: not minimal|bool
- name: "Extract exa into path"
  unarchive:
      dest: "{{home}}/bin/"
      src: "/tmp/exa-{{exa_version}}.zip"
  when: not minimal|bool
- name: "Create link for exa binary"
  file:
      src: "{{home}}/bin/exa-linux-x86_64"
      dest: "{{home}}/bin/exa"
      state: "link"
  when: (not minimal|bool) and (nixos_file.stat.exists == false)
- name: Create a symbolic link for bash_profile
  file:
    src: "{{home}}/.profile"
    dest: "{{home}}/.bash_profile"
    state: link
